generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model apostila {
  id                Int                 @id @default(autoincrement())
  moduloId          Int
  titulo            String              @db.VarChar(100)
  arquivoUrl        String              @db.VarChar(255)
  modulo            modulo              @relation(fields: [moduloId], references: [id], map: "Apostila_moduloId_fkey")
  progressoapostila progressoapostila[]

  @@index([moduloId], map: "Apostila_moduloId_fkey")
}

model avaliacao {
  id                 Int                  @id @default(autoincrement())
  moduloId           Int
  titulo             String               @db.VarChar(100)
  url                String               @db.VarChar(255) // era descricao
  modulo             modulo               @relation(fields: [moduloId], references: [id], map: "Avaliacao_moduloId_fkey")
  progressoavaliacao progressoavaliacao[]

  @@index([moduloId], map: "Avaliacao_moduloId_fkey")
}

model curso {
  id             Int       @id @default(autoincrement())
  titulo         String    @db.VarChar(100)
  descricao      String?
  categoria      String    @db.VarChar(50)
  cargaHoraria   Int
  modulo         modulo[]

  professores    usuario[] @relation("CursosMinistrados")
  alunos         usuario[] @relation("CursosMatriculados")
}

model formapagamento {
  id        Int                 @id @default(autoincrement())
  tipo      formapagamento_tipo
  titular   String?             @db.VarChar(100)
  numero    String?             @db.VarChar(50)
  validade  String?             @db.VarChar(10)
  cvv       String?             @db.VarChar(10)
  usuarioId Int
  createdAt DateTime            @default(now())
  parcelas  Int?
  usuario   usuario             @relation(fields: [usuarioId], references: [id], map: "FormaPagamento_usuarioId_fkey")

  @@index([usuarioId], map: "FormaPagamento_usuarioId_fkey")
}

model modulo {
  id        Int         @id @default(autoincrement())
  cursoId   Int
  titulo    String      @db.VarChar(100)
  ordem     Int
  apostila  apostila[]
  avaliacao avaliacao[]
  curso     curso       @relation(fields: [cursoId], references: [id], map: "Modulo_cursoId_fkey")
  video     video[]

  @@index([cursoId], map: "Modulo_cursoId_fkey")
}

model parceria {
  id                   Int      @id @default(autoincrement())
  alunoId              Int
  descricaoProjeto     String?
  percentualPlataforma Decimal
  dataAssinatura       DateTime
  contratoUrl          String   @db.VarChar(255)
  usuario              usuario  @relation(fields: [alunoId], references: [id], map: "Parceria_alunoId_fkey")

  @@index([alunoId], map: "Parceria_alunoId_fkey")
}

model plano {
  id        Int       @id @default(autoincrement())
  nome      String
  descricao String    @db.Text
  valor     Decimal   @db.Decimal(10, 2)
  usuario   usuario[]
}

model progressoapostila {
  alunoId             Int
  apostilaId          Int
  baixouApostila      Boolean
  dataUltimaInteracao DateTime
  usuario             usuario  @relation(fields: [alunoId], references: [id], map: "ProgressoApostila_alunoId_fkey")
  apostila            apostila @relation(fields: [apostilaId], references: [id], map: "ProgressoApostila_apostilaId_fkey")

  @@id([alunoId, apostilaId])
  @@index([apostilaId], map: "ProgressoApostila_apostilaId_fkey")
}

model progressoavaliacao {
  alunoId             Int
  avaliacaoId         Int
  notaAvaliacao       Decimal
  dataUltimaInteracao DateTime
  usuario             usuario   @relation(fields: [alunoId], references: [id], map: "ProgressoAvaliacao_alunoId_fkey")
  avaliacao           avaliacao @relation(fields: [avaliacaoId], references: [id], map: "ProgressoAvaliacao_avaliacaoId_fkey")

  @@id([alunoId, avaliacaoId])
  @@index([avaliacaoId], map: "ProgressoAvaliacao_avaliacaoId_fkey")
}

model progressovideo {
  alunoId             Int
  videoId             Int
  progressoVideo      Int
  dataUltimaInteracao DateTime
  usuario             usuario  @relation(fields: [alunoId], references: [id], map: "ProgressoVideo_alunoId_fkey")
  video               video    @relation(fields: [videoId], references: [id], map: "ProgressoVideo_videoId_fkey")

  @@id([alunoId, videoId])
  @@index([videoId], map: "ProgressoVideo_videoId_fkey")
}

model usuario {
  id                 Int                  @id @default(autoincrement())
  nome               String               @db.VarChar(100)
  email              String               @unique(map: "Usuario_email_key") @db.VarChar(100)
  senha              String               @db.VarChar(255)
  tipo               usuario_tipo
  dataCadastro       DateTime             @default(now())
  planoId            Int?
  cpf                String?              @db.VarChar(11)
  formapagamento     formapagamento[]
  parceria           parceria[]
  progressoapostila  progressoapostila[]
  progressoavaliacao progressoavaliacao[]
  progressovideo     progressovideo[]
  plano              plano?               @relation(fields: [planoId], references: [id], map: "Usuario_planoId_fkey")

  cursosMinistrados  curso[]              @relation("CursosMinistrados")
  cursosMatriculados curso[]              @relation("CursosMatriculados")

  @@index([planoId], map: "Usuario_planoId_fkey")
}

model video {
  id             Int              @id @default(autoincrement())
  moduloId       Int
  titulo         String           @db.VarChar(100)
  urlVideo       String           @db.VarChar(255)
  duracao        Int
  progressovideo progressovideo[]
  modulo         modulo           @relation(fields: [moduloId], references: [id], map: "Video_moduloId_fkey")

  @@index([moduloId], map: "Video_moduloId_fkey")
}

enum formapagamento_tipo {
  CartaoCredito
  Boleto
  Pix
}

enum usuario_tipo {
  aluno
  professor
  admin
}